% This section is for the game itself 
% setting parameters
s=10;          %T-cell from precursor supply rate ((mm^3/day)^-1 )
r=0.03;        %normal T-cell growth rate (day^-1)
Tmax=1500;     %maximum T-cell population ((mm^3)^-1)
mu=0.02;       %normal/latently infected T-cell death rate (day^-1)
beta=0.24;     %actively infected T-cell death rate (day^-1)
alfa=2.4;      %free virus death rate (day^-1)
k1=2.4*10^-5;  %T-cell infection rate by free virus (mm^3/day)
k2=3*10^-3;    %latent-to-active T-cell conversion rate (day^-1)
N=1400;        %virus produced by an active T-cell (#)
m=2*10^-3;     %latent-to-normal T-cell conversion rate (day^-1)
t = 0:1:30;    

% the function/ agents / rules
dt = 1;
t = 0:dt:30;
nIterations = length(t);

%vectors for ploting
y0 = zeros(nIterations, 1);
y1 = zeros(nIterations, 1);
y2 = zeros(nIterations, 1);
y3 = zeros(nIterations, 1);
y4 = zeros(nIterations, 1);

%intial values
y0(1) = n1;
y1(1) = n2;
y2(1) = n3;
y3(1) = n4;
y4(1) = n5;

%Functions
for i = nIterations-1
    y1(i+1) = y1(i)+ dt*(s+r*y1(i).*(1-(y1(i)+y2(i)+y3(i))/Tmax)-mu*y1(i)-k1*y4(i).*y1(i)+m*y2(i));
    y2(i+1) = y2(i)+dt*(k1*y4(i).*y1(i)-mu*y2(i)-k2*y2(i)-m*y2(i));
    y3(i+1) = y3(i)+dt*(k2*y2(i)-beta*y3(i));
    y4(i+1) = y4(i)+dt*(N*beta*y3(i)-k1*y4(i).*y1(i)-alfa*y4(i));
    end

% VALUES FOR CELLS
% 0 = empty gridcells
% 1 = normal t-cell
% 2 = latent t-cell
% 3 = active t-cell
% 4 = virus

% CREATE PLOTS
for i = [0];                        % i = [0 1 2 3 4 5];
    a = zeros(25,25);
for n1 = 10;
    a(randperm(numel(a), n1)) = i;
end
end

for k = [1];
for n2 = 10;
a(randperm(numel(a), n2)) = k;
end 
end

for l = [2];
for n3 = 10; 
a(randperm(numel(a), n3)) = l;
end
end

for m=[3];
for n4 = 10;
a(randperm(numel(a), n4)) = m;
end
end

for j=[4];
    for n5 = 5;
       a(randperm(numel(a), n5)) = j;
    end
end



% CREATE PLOTS
figure(1)
hold on
imagesc(a)
colormap hot
colorbar 
grid
k = y1;
l = y2;
m = y3;
j = y4;
end

%neighbours
function pos = neighbours(a,x,y)
pos1 = a(x-1,y-1);
pos2 = a(x-1,y);
pos3 = a(x-1,y+1);
pos4 = a(x,y-1);
pos5 = a(x,y+1);
pos6 = a(x+1,y-1);
pos7 = a(x+1,y);
pos8 = a(x+1,y+1);
pos9=a(x,y);
end

q = [0,0.00001,1]

% function Infect = celldestiny(a,x,y)
% pos1||pos2||pos3||pos4||pos5||pos6||pos7||pos8=y4 &&



y1=1
y2=2
y3=3
y4=4

if pos9=y1 && pos1=y4 && rand(q)>=k1;
pos9 = y2 && pos1=0;
elseif 
pos9=y1;
end
end

if pos9=y1 && pos2=y4 && rand(q)>=k1;
pos9 = y2  && pos2=0;
elseif 
pos9=y1;
end
end

if pos9=y1 && pos3=y4 && rand(q)>=k1;
pos9 = y2 && pos3=0;
elseif 
pos9=y1;
end
end

if pos9=y1 && pos4=y4 && rand(q)>=k1;
pos9 = y2 && pos4=0;
elseif 
pos9=y1;
end
end

if pos9=y1 && pos5=y4 && rand(q)>=k1;
pos9 = y2 && pos5=0;
elseif 
pos9=y1;
end
end

if pos9=y1 && pos6=y4 && rand(q)>=k1;
pos9 = y2 && pos6=0;
elseif 
pos9=y1;
end
end

if pos9=y1 && pos7=y4 && rand(q)>=k1;
pos9 = y2 && pos7=0;
elseif 
pos9=y1;
end
end

if pos9=y1 && pos8=y4 && rand(q)>=k1;
pos9 = y2 && pos8=0;
elseif 
pos9=y1;
end
end

%%

n = neighbors(a,x,y); 
% if n = n5;
    y1 = y1*k1;

% first probability for changing of t-cells

probability1 = randi(2,1,1);     
    % a 50 percent probablity represented by genereation of random integer either 1 or 2
    % value of probability1 returns an int 
if probability1 == 1
    y1 = y2;    % normal t-cell becomes latent t-cell
    y4 = 0;     % virus dies / disappears # OFWGKTA
                % HELP HELP HELP 
                % HOW TO MAKE SURE THAT WE DONT ERASE ALL OF y4, only targeted y4
                % ie. only change the one specified t-cell and kill specified virus
end


elseif antal==2
    liv=a(x,y); % eftersom inga celler ?terupplivas n?r detr finns tv? grannar
elseif antal==3
    liv=1;
else 
    liv=0;
end
end


